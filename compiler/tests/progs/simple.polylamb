let double: Int -> Int =
  \ (x: Int). x + x

let double_2: Int -> Int =
  \ (x: Int). 2 + x

let all: Int -> Int -> (Int -> Bool) -> Bool =
  \ (min: Int) (max: Int) (pred: Int -> Bool).
    let folder: Int -> Bool -> Bool =
      \ (element: Int) (acc: Bool).
        if element - 1 < max
        then (pred acc) && (folder (element + 1))
        else acc in
    folder min true